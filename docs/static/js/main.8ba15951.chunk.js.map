{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","console","log","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACI,sBAAMC,SAfa,SAAAC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,IACdO,QAAQC,IAAI,kBAQhB,SACI,uBACIC,KAAK,OACLC,MAAOX,EACPY,SAzBc,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,a,QCPlBG,EAAc,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIlC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,Q,uBCTJK,EAAO,uCAAG,WAAOb,GAAP,uBAAAc,EAAA,6DAEbL,EAFa,0FAE4EM,UAAUf,GAFtF,sBAIAgB,MAAMP,GAJN,cAIbQ,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAXvB,kBAeZW,GAfY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAEzB,MAA0BR,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAfAC,qBAAU,WAENjB,EAAQb,GACH+B,MAAK,SAAAT,GAEFO,EAAS,CACLV,KAAMG,EACNK,SAAS,SAMvB,CAAC3B,IAEI4B,EDpBuBI,CAAahC,GAA9BsB,EAAb,EAAQH,KAAUQ,EAAlB,EAAkBA,QAIlB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAoDV,IAElD2B,GAAW,mBAAGjB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQY,EAAID,KAAK,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEjBzBU,EAAe,WAExB,MAAsCzC,mBAAS,CAAC,cAAhD,mBAAQ0C,EAAR,KAAoB3C,EAApB,KAEA,OAEI,gCAEI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ2C,EAAWb,KAAK,SAAArB,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlCmC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ba15951.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setinputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleOnSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories(category => [inputValue, ...category]);\r\n            setinputValue('');\r\n            console.log('Submit Hecho');\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleOnSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    //console.log(img);\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=Ave78SQBZd2HC1OlX0Mu6HJjCupxNi19&q=${encodeURI(category)}&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }   \r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data:img, loading } = useFetchGifs(category);\r\n    \r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__bounce'>{ category }</h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\r\n\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    img.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(img=>{\r\n                \r\n                setstate({\r\n                    data: img,\r\n                    loading: false,\r\n                });\r\n            \r\n\r\n            })\r\n\r\n    },[category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [ categories, setCategories ] = useState(['One Piece']);\r\n\r\n    return (\r\n\r\n        <div>\r\n            \r\n            <h2>GifExpertApp</h2>\r\n        \r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr /> \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}